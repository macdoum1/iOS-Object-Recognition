<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SESSendRawEmailRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SESSendRawEmailRequest</TokenIdentifier>
			<Abstract type="html">Send Raw Email Request</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>
			
			<NodeRef refid="741"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SESSendRawEmailRequest/init</TokenIdentifier>
			<Abstract type="html">Default constructor for a new  object.  Callers should use the
property methods to initialize this object after creating it.</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SESSendRawEmailRequest/setSource:</TokenIdentifier>
			<Abstract type="html">The identity&apos;s email address. &lt;note&gt;If you specify the
&lt;code&gt;Source&lt;/code&gt; parameter, then bounce notifications and
complaints will be sent to this email address. This takes precedence
over any &lt;i&gt;Return-Path&lt;/i&gt; header that you might include in the raw
text of the message. &lt;/note&gt;</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *source</Declaration>
			
			
			<Anchor>//api/name/source</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SESSendRawEmailRequest/source</TokenIdentifier>
			<Abstract type="html">The identity&apos;s email address. &lt;note&gt;If you specify the
&lt;code&gt;Source&lt;/code&gt; parameter, then bounce notifications and
complaints will be sent to this email address. This takes precedence
over any &lt;i&gt;Return-Path&lt;/i&gt; header that you might include in the raw
text of the message. &lt;/note&gt;</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *source</Declaration>
			
			
			<Anchor>//api/name/source</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SESSendRawEmailRequest/setDestinations:</TokenIdentifier>
			<Abstract type="html">A list of destinations for the message.</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *destinations</Declaration>
			
			
			<Anchor>//api/name/destinations</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SESSendRawEmailRequest/destinations</TokenIdentifier>
			<Abstract type="html">A list of destinations for the message.</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *destinations</Declaration>
			
			
			<Anchor>//api/name/destinations</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SESSendRawEmailRequest/setRawMessage:</TokenIdentifier>
			<Abstract type="html">The raw text of the message. The client is responsible for ensuring
the following: &lt;p&gt; &lt;ul&gt; &lt;li&gt;Message must contain a header and a body,
separated by a blank line.&lt;/li&gt; &lt;li&gt;All required header fields must be
present.&lt;/li&gt; &lt;li&gt;Each part of a multipart MIME message must be
formatted properly.&lt;/li&gt; &lt;li&gt;MIME content types must be among those
supported by Amazon SES. Refer to the &lt;a
f=&quot;http://docs.amazonwebservices.com/ses/latest/DeveloperGuide&quot;&gt;Amazon
SES Developer Guide&lt;/a&gt; for more details. &lt;/li&gt; &lt;li&gt;Content must be
base64-encoded, if MIME requires it.&lt;/li&gt; &lt;/ul&gt;</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) SESRawMessage *rawMessage</Declaration>
			
			
			<Anchor>//api/name/rawMessage</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SESSendRawEmailRequest/rawMessage</TokenIdentifier>
			<Abstract type="html">The raw text of the message. The client is responsible for ensuring
the following: &lt;p&gt; &lt;ul&gt; &lt;li&gt;Message must contain a header and a body,
separated by a blank line.&lt;/li&gt; &lt;li&gt;All required header fields must be
present.&lt;/li&gt; &lt;li&gt;Each part of a multipart MIME message must be
formatted properly.&lt;/li&gt; &lt;li&gt;MIME content types must be among those
supported by Amazon SES. Refer to the &lt;a
f=&quot;http://docs.amazonwebservices.com/ses/latest/DeveloperGuide&quot;&gt;Amazon
SES Developer Guide&lt;/a&gt; for more details. &lt;/li&gt; &lt;li&gt;Content must be
base64-encoded, if MIME requires it.&lt;/li&gt; &lt;/ul&gt;</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) SESRawMessage *rawMessage</Declaration>
			
			
			<Anchor>//api/name/rawMessage</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SESSendRawEmailRequest/addDestination:</TokenIdentifier>
			<Abstract type="html">Adds a single object to destinations.
This function will alloc and init destinations if not already done.</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>			
			
			<Declaration>- (void)addDestination:(NSString *)destinationObject</Declaration>
			
			
			<Anchor>//api/name/addDestination:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SESSendRawEmailRequest/description</TokenIdentifier>
			<Abstract type="html">Returns a string representation of this object; useful for testing and
debugging.</Abstract>
			<DeclaredIn>SESSendRawEmailRequest.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of this object.</Abstract></ReturnValue>
			<Anchor>//api/name/description</Anchor>
		</Token>
		
	</File>
</Tokens>