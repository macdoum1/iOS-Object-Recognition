<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SecurityTokenServiceInvalidAuthorizationMessageException.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SecurityTokenServiceInvalidAuthorizationMessageException</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
The error returned if the message passed to
&lt;code&gt;DecodeAuthorizationMessage&lt;/code&gt; was invalid. This can happen
if the token contains invalid characters, such as linebreaks.
&lt;/p&gt;</Abstract>
			<DeclaredIn>SecurityTokenServiceInvalidAuthorizationMessageException.h</DeclaredIn>
			
			<NodeRef refid="891"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SecurityTokenServiceInvalidAuthorizationMessageException/initWithMessage:</TokenIdentifier>
			<Abstract type="html">Initialize the exception with a message.</Abstract>
			<DeclaredIn>SecurityTokenServiceInvalidAuthorizationMessageException.h</DeclaredIn>			
			
			<Declaration>- (id)initWithMessage:(NSString *)message</Declaration>
			<Parameters>
				<Parameter>
					<Name>message</Name>
					<Abstract type="html">The message.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithMessage:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SecurityTokenServiceInvalidAuthorizationMessageException/description</TokenIdentifier>
			<Abstract type="html">Returns a string representation of this object; useful for testing and
debugging.</Abstract>
			<DeclaredIn>SecurityTokenServiceInvalidAuthorizationMessageException.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of this object.</Abstract></ReturnValue>
			<Anchor>//api/name/description</Anchor>
		</Token>
		
	</File>
</Tokens>