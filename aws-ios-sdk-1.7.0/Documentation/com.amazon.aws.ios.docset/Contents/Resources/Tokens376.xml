<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/EC2Filter.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/EC2Filter</TokenIdentifier>
			<Abstract type="html">Filter</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>
			
			<NodeRef refid="376"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Filter/setName:</TokenIdentifier>
			<Abstract type="html">Specifies the name of the filter.</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Filter/name</TokenIdentifier>
			<Abstract type="html">Specifies the name of the filter.</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Filter/setValues:</TokenIdentifier>
			<Abstract type="html">Contains one or more values for the filter.</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *values</Declaration>
			
			
			<Anchor>//api/name/values</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Filter/values</TokenIdentifier>
			<Abstract type="html">Contains one or more values for the filter.</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *values</Declaration>
			
			
			<Anchor>//api/name/values</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Filter/init</TokenIdentifier>
			<Abstract type="html">Default constructor for a new Filter object.  Callers should use the
property methods to initialize this object after creating it.</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Filter/initWithName:andValues:</TokenIdentifier>
			<Abstract type="html">Constructs a new Filter object.
Callers should use properties to initialize any additional object members.</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>			
			
			<Declaration>- (id)initWithName:(NSString *)theName andValues:(NSMutableArray *)theValues</Declaration>
			<Parameters>
				<Parameter>
					<Name>theName</Name>
					<Abstract type="html">Specifies the name of the filter.</Abstract>
				</Parameter><Parameter>
					<Name>theValues</Name>
					<Abstract type="html">Contains one or more values for the filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithName:andValues:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Filter/initWithName:</TokenIdentifier>
			<Abstract type="html">Constructs a new Filter object.
Callers should use properties to initialize any additional object members.</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>			
			
			<Declaration>- (id)initWithName:(NSString *)theName</Declaration>
			<Parameters>
				<Parameter>
					<Name>theName</Name>
					<Abstract type="html">Specifies the name of the filter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Filter/addValue:</TokenIdentifier>
			<Abstract type="html">Adds a single object to values.
This function will alloc and init values if not already done.</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>			
			
			<Declaration>- (void)addValue:(NSString *)valueObject</Declaration>
			
			
			<Anchor>//api/name/addValue:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Filter/description</TokenIdentifier>
			<Abstract type="html">Returns a string representation of this object; useful for testing and
debugging.</Abstract>
			<DeclaredIn>EC2Filter.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of this object.</Abstract></ReturnValue>
			<Anchor>//api/name/description</Anchor>
		</Token>
		
	</File>
</Tokens>