<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SimpleDBSelectRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SimpleDBSelectRequest</TokenIdentifier>
			<Abstract type="html">Select Request</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>
			
			<NodeRef refid="938"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleDBSelectRequest/setSelectExpression:</TokenIdentifier>
			<Abstract type="html">The expression used to query the domain.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *selectExpression</Declaration>
			
			
			<Anchor>//api/name/selectExpression</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SimpleDBSelectRequest/selectExpression</TokenIdentifier>
			<Abstract type="html">The expression used to query the domain.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *selectExpression</Declaration>
			
			
			<Anchor>//api/name/selectExpression</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleDBSelectRequest/setNextToken:</TokenIdentifier>
			<Abstract type="html">A string informing Amazon SimpleDB where to start the next list of
&lt;code&gt;ItemNames&lt;/code&gt;.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *nextToken</Declaration>
			
			
			<Anchor>//api/name/nextToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SimpleDBSelectRequest/nextToken</TokenIdentifier>
			<Abstract type="html">A string informing Amazon SimpleDB where to start the next list of
&lt;code&gt;ItemNames&lt;/code&gt;.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *nextToken</Declaration>
			
			
			<Anchor>//api/name/nextToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleDBSelectRequest/setConsistentRead:</TokenIdentifier>
			<Abstract type="html">Determines whether or not strong consistency should be enforced when
data is read from SimpleDB. If &lt;code&gt;true&lt;/code&gt;, any data previously
written to SimpleDB will be returned. Otherwise, results will be
consistent eventually, and the client may not see data that was
written immediately before your read.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SimpleDBSelectRequest/consistentRead</TokenIdentifier>
			<Abstract type="html">Determines whether or not strong consistency should be enforced when
data is read from SimpleDB. If &lt;code&gt;true&lt;/code&gt;, any data previously
written to SimpleDB will be returned. Otherwise, results will be
consistent eventually, and the client may not see data that was
written immediately before your read.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleDBSelectRequest/init</TokenIdentifier>
			<Abstract type="html">Default constructor for a new SelectRequest object.  Callers should use the
property methods to initialize this object after creating it.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleDBSelectRequest/initWithSelectExpression:</TokenIdentifier>
			<Abstract type="html">Constructs a new SelectRequest object.
Callers should use properties to initialize any additional object members.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>- (id)initWithSelectExpression:(NSString *)theSelectExpression</Declaration>
			<Parameters>
				<Parameter>
					<Name>theSelectExpression</Name>
					<Abstract type="html">The expression used to query the domain.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithSelectExpression:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleDBSelectRequest/initWithSelectExpression:andConsistentRead:</TokenIdentifier>
			<Abstract type="html">Constructs a new SelectRequest object.
Callers should use properties to initialize any additional object members.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>- (id)initWithSelectExpression:(NSString *)theSelectExpression andConsistentRead:(BOOL)theConsistentRead</Declaration>
			<Parameters>
				<Parameter>
					<Name>theSelectExpression</Name>
					<Abstract type="html">The expression used to query the domain.</Abstract>
				</Parameter><Parameter>
					<Name>theConsistentRead</Name>
					<Abstract type="html">Determines whether or not strong consistency
should be enforced when data is read from SimpleDB. If
&lt;code&gt;true&lt;/code&gt;, any data previously written to SimpleDB will be
returned. Otherwise, results will be consistent eventually, and the
client may not see data that was written immediately before your read.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithSelectExpression:andConsistentRead:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SimpleDBSelectRequest/description</TokenIdentifier>
			<Abstract type="html">Returns a string representation of this object; useful for testing and
debugging.</Abstract>
			<DeclaredIn>SimpleDBSelectRequest.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of this object.</Abstract></ReturnValue>
			<Anchor>//api/name/description</Anchor>
		</Token>
		
	</File>
</Tokens>