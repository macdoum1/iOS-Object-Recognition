<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AmazonSQSClient.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AmazonSQSClient</TokenIdentifier>
			<Abstract type="html">&lt;summary&gt;
Interface for accessing AmazonSQS.</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>
			
			<NodeRef refid="16"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/setQueueAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
Sets the value of one or more queue attributes. Valid attributes that can be set are [VisibilityTimeout, Policy,
MaximumMessageSize, MessageRetentionPeriod, ReceiveMessageWaitTimeSeconds].
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSSetQueueAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSSetQueueAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSSetQueueAttributesResponse *)setQueueAttributes:(SQSSetQueueAttributesRequest *)setQueueAttributesRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>setQueueAttributesRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the SetQueueAttributes service method
on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setQueueAttributes:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/changeMessageVisibilityBatch:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
This is a batch version of ChangeMessageVisibility. It takes multiple receipt handles and performs the operation on each
of the them. The result of the operation on each message is reported individually in the response.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSChangeMessageVisibilityBatchRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSChangeMessageVisibilityBatchResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSChangeMessageVisibilityBatchResponse *)changeMessageVisibilityBatch:(SQSChangeMessageVisibilityBatchRequest *)changeMessageVisibilityBatchRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>changeMessageVisibilityBatchRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the
ChangeMessageVisibilityBatch service method on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The response from the ChangeMessageVisibilityBatch service method, as returned by AmazonSQS.</Abstract></ReturnValue>
			<Anchor>//api/name/changeMessageVisibilityBatch:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/changeMessageVisibility:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
The ChangeMessageVisibility action changes the visibility timeout of a specified message in a queue to a new value. The
maximum allowed timeout value you can set the value to is 12 hours. This means you can&apos;t extend the timeout of a message
in an existing queue to more than a total visibility timeout of 12 hours. (For more information visibility timeout, see
 Visibility Timeout
 in the Amazon SQS Developer Guide.)
&lt;/p&gt;
&lt;p&gt;
For example, let&apos;s say you have a message and its default message visibility timeout is 30 minutes. You could call
ChangeMessageVisiblity with a value of two hours and the effective timeout would be two hours and 30 minutes. When that
time comes near you could again extend the time out by calling ChangeMessageVisiblity, but this time the maximum allowed
timeout would be 9 hours and 30 minutes.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;IMPORTANT:&lt;/b&gt;If you attempt to set the VisibilityTimeout to an amount more than the maximum time left, Amazon SQS
returns an error. It will not automatically recalculate and increase the timeout to the maximum time remaining.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;IMPORTANT:&lt;/b&gt;Unlike with a queue, when you change the visibility timeout for a specific message, that timeout value
is applied immediately but is not saved in memory for that message. If you don&apos;t delete a message after it is received,
the visibility timeout for the message the next time it is received reverts to the original timeout value, not the value
you set with the ChangeMessageVisibility action.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSChangeMessageVisibilityRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSChangeMessageVisibilityResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSChangeMessageVisibilityResponse *)changeMessageVisibility:(SQSChangeMessageVisibilityRequest *)changeMessageVisibilityRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>changeMessageVisibilityRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the ChangeMessageVisibility
service method on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/changeMessageVisibility:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/getQueueUrl:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
The GetQueueUrl action returns the URL of an existing queue.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSGetQueueUrlRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSGetQueueUrlResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSGetQueueUrlResponse *)getQueueUrl:(SQSGetQueueUrlRequest *)getQueueUrlRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>getQueueUrlRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the GetQueueUrl service method on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The response from the GetQueueUrl service method, as returned by AmazonSQS.</Abstract></ReturnValue>
			<Anchor>//api/name/getQueueUrl:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/removePermission:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
The RemovePermission action revokes any permissions in the queue policy that matches the specified Label parameter. Only
the owner of the queue can remove permissions.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSRemovePermissionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSRemovePermissionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSRemovePermissionResponse *)removePermission:(SQSRemovePermissionRequest *)removePermissionRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>removePermissionRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the RemovePermission service method on
AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removePermission:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/getQueueAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
Gets attributes for the specified queue. The following attributes are supported:
&lt;ul&gt;
&lt;li&gt; All - returns all values.&lt;/li&gt;
&lt;li&gt; ApproximateNumberOfMessages - returns the approximate number of visible messages in a queue. For more information,
see Resources Required to Process Messages in the Amazon SQS Developer Guide.&lt;/li&gt;
&lt;li&gt; ApproximateNumberOfMessagesNotVisible - returns the approximate number of messages that are not timed-out and not
deleted. For more information, see Resources Required to Process Messages in the Amazon SQS Developer Guide.&lt;/li&gt;
&lt;li&gt; VisibilityTimeout - returns the visibility timeout for the queue. For more information about visibility timeout,
see Visibility Timeout in the Amazon SQS Developer Guide.&lt;/li&gt;
&lt;li&gt; CreatedTimestamp - returns the time when the queue was created (epoch time in seconds).&lt;/li&gt;
&lt;li&gt; LastModifiedTimestamp - returns the time when the queue was last changed (epoch time in seconds).&lt;/li&gt;
&lt;li&gt; Policy - returns the queue&apos;s policy.&lt;/li&gt;
&lt;li&gt; MaximumMessageSize - returns the limit of how many bytes a message can contain before Amazon SQS rejects it.&lt;/li&gt;
&lt;li&gt; MessageRetentionPeriod - returns the number of seconds Amazon SQS retains a message.&lt;/li&gt;
&lt;li&gt; QueueArn - returns the queue&apos;s Amazon resource name (ARN).&lt;/li&gt;
&lt;li&gt; ApproximateNumberOfMessagesDelayed - returns the approximate number of messages that are pending to be added to
the queue.&lt;/li&gt;
&lt;li&gt; DelaySeconds - returns the default delay on the queue in seconds.&lt;/li&gt;
&lt;li&gt; ReceiveMessageWaitTimeSeconds - returns the time for which a ReceiveMessage call will wait for a message to
arrive.&lt;/li&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSGetQueueAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSGetQueueAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSGetQueueAttributesResponse *)getQueueAttributes:(SQSGetQueueAttributesRequest *)getQueueAttributesRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>getQueueAttributesRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the GetQueueAttributes service method
on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The response from the GetQueueAttributes service method, as returned by AmazonSQS.</Abstract></ReturnValue>
			<Anchor>//api/name/getQueueAttributes:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/sendMessageBatch:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
This is a batch version of SendMessage. It takes multiple messages and adds each of them to the queue. The result of
each add operation is reported individually in the response.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSSendMessageBatchRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSSendMessageBatchResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSSendMessageBatchResponse *)sendMessageBatch:(SQSSendMessageBatchRequest *)sendMessageBatchRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>sendMessageBatchRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the SendMessageBatch service method on
AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The response from the SendMessageBatch service method, as returned by AmazonSQS.</Abstract></ReturnValue>
			<Anchor>//api/name/sendMessageBatch:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/deleteQueue:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
This action unconditionally deletes the queue specified by the queue URL. Use this operation WITH CARE! The queue is
deleted even if it is NOT empty.
&lt;/p&gt;
&lt;p&gt;
Once a queue has been deleted, the queue name is unavailable for use with new queues for 60 seconds.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSDeleteQueueRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSDeleteQueueResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSDeleteQueueResponse *)deleteQueue:(SQSDeleteQueueRequest *)deleteQueueRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>deleteQueueRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the DeleteQueue service method on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteQueue:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/sendMessage:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
The SendMessage action delivers a message to the specified queue.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSSendMessageRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSSendMessageResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSSendMessageResponse *)sendMessage:(SQSSendMessageRequest *)sendMessageRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>sendMessageRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the SendMessage service method on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The response from the SendMessage service method, as returned by AmazonSQS.</Abstract></ReturnValue>
			<Anchor>//api/name/sendMessage:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/receiveMessage:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
Retrieves one or more messages from the specified queue, including the message body and message ID of each message.
Messages returned by this action stay in the queue until you delete them. However, once a message is returned to a
ReceiveMessage request, it is not returned on subsequent ReceiveMessage requests for the duration of the
VisibilityTimeout . If you do not specify a VisibilityTimeout in the request, the overall visibility timeout for the
queue is used for the returned messages.
&lt;/p&gt;
&lt;p&gt;
If a message is available in the queue, the call will return immediately. Otherwise, it will wait up to WaitTimeSeconds
for a message to arrive. If you do not specify WaitTimeSeconds in the request, the queue attribute
ReceiveMessageWaitTimeSeconds is used to determine how long to wait.
&lt;/p&gt;
&lt;p&gt;
You could ask for additional information about each message through the attributes. Attributes that can be requested are
[SenderId, ApproximateFirstReceiveTimestamp, ApproximateReceiveCount, SentTimestamp] .
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSReceiveMessageRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSReceiveMessageResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSReceiveMessageResponse *)receiveMessage:(SQSReceiveMessageRequest *)receiveMessageRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>receiveMessageRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the ReceiveMessage service method on
AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The response from the ReceiveMessage service method, as returned by AmazonSQS.</Abstract></ReturnValue>
			<Anchor>//api/name/receiveMessage:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/listQueues:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
Returns a list of your queues.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSListQueuesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSListQueuesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSListQueuesResponse *)listQueues:(SQSListQueuesRequest *)listQueuesRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>listQueuesRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the ListQueues service method on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The response from the ListQueues service method, as returned by AmazonSQS.</Abstract></ReturnValue>
			<Anchor>//api/name/listQueues:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/deleteMessageBatch:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
This is a batch version of DeleteMessage. It takes multiple receipt handles and deletes each one of the messages. The
result of the delete operation on each message is reported individually in the response.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSDeleteMessageBatchRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSDeleteMessageBatchResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSDeleteMessageBatchResponse *)deleteMessageBatch:(SQSDeleteMessageBatchRequest *)deleteMessageBatchRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>deleteMessageBatchRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the DeleteMessageBatch service method
on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The response from the DeleteMessageBatch service method, as returned by AmazonSQS.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteMessageBatch:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/createQueue:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
The CreateQueue action creates a new queue, or returns the URL of an existing one. When you request CreateQueue , you
provide a name for the queue. To successfully create a new queue, you must provide a name that is unique within the
scope of your own queues.
&lt;/p&gt;
&lt;p&gt;
You may pass one or more attributes in the request. If you do not provide a value for any attribute, the queue will have
the default value for that attribute. Permitted attributes are the same that can be set using SetQueueAttributes.
&lt;/p&gt;
&lt;p&gt;
If you provide the name of an existing queue, a new queue isn&apos;t created. If the values of attributes provided with the
request match up with those on the existing queue, the queue URL is returned. Otherwise, a QueueNameExists error is
returned.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSCreateQueueRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSCreateQueueResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSCreateQueueResponse *)createQueue:(SQSCreateQueueRequest *)createQueueRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>createQueueRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the CreateQueue service method on AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The response from the CreateQueue service method, as returned by AmazonSQS.</Abstract></ReturnValue>
			<Anchor>//api/name/createQueue:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/addPermission:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
The AddPermission action adds a permission to a queue for a specific  Appendix:
The Access Policy Language  in the Amazon SQS Developer Guide.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSAddPermissionRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSAddPermissionResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSAddPermissionResponse *)addPermission:(SQSAddPermissionRequest *)addPermissionRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>addPermissionRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the AddPermission service method on
AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addPermission:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AmazonSQSClient/deleteMessage:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;
The DeleteMessage action unconditionally removes the specified message from the specified queue. Even if the message is
locked by another reader due to the visibility timeout setting, it is still deleted from the queue.
&lt;/p&gt;</Abstract>
			<DeclaredIn>AmazonSQSClient.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SQSDeleteMessageRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/SQSDeleteMessageResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (SQSDeleteMessageResponse *)deleteMessage:(SQSDeleteMessageRequest *)deleteMessageRequest</Declaration>
			<Parameters>
				<Parameter>
					<Name>deleteMessageRequest</Name>
					<Abstract type="html">Container for the necessary parameters to execute the DeleteMessage service method on
AmazonSQS.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteMessage:</Anchor>
		</Token>
		
	</File>
</Tokens>