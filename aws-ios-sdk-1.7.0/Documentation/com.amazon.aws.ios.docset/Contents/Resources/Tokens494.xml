<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/EC2Subnet.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/EC2Subnet</TokenIdentifier>
			<Abstract type="html">Subnet</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>
			
			<NodeRef refid="494"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/init</TokenIdentifier>
			<Abstract type="html">Default constructor for a new  object.  Callers should use the
property methods to initialize this object after creating it.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/setSubnetId:</TokenIdentifier>
			<Abstract type="html">Specifies the ID of the subnet.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *subnetId</Declaration>
			
			
			<Anchor>//api/name/subnetId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Subnet/subnetId</TokenIdentifier>
			<Abstract type="html">Specifies the ID of the subnet.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *subnetId</Declaration>
			
			
			<Anchor>//api/name/subnetId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/setState:</TokenIdentifier>
			<Abstract type="html">Describes the current state of the subnet. The state of the subnet may
be either &lt;code&gt;pending&lt;/code&gt; or &lt;code&gt;available&lt;/code&gt;.
&lt;p&gt;
&lt;b&gt;Constraints:&lt;/b&gt;&lt;br/&gt;
&lt;b&gt;Allowed Values: &lt;/b&gt;pending, available</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Subnet/state</TokenIdentifier>
			<Abstract type="html">Describes the current state of the subnet. The state of the subnet may
be either &lt;code&gt;pending&lt;/code&gt; or &lt;code&gt;available&lt;/code&gt;.
&lt;p&gt;
&lt;b&gt;Constraints:&lt;/b&gt;&lt;br/&gt;
&lt;b&gt;Allowed Values: &lt;/b&gt;pending, available</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/setVpcId:</TokenIdentifier>
			<Abstract type="html">Contains the ID of the VPC the subnet is in.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *vpcId</Declaration>
			
			
			<Anchor>//api/name/vpcId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Subnet/vpcId</TokenIdentifier>
			<Abstract type="html">Contains the ID of the VPC the subnet is in.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *vpcId</Declaration>
			
			
			<Anchor>//api/name/vpcId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/setCidrBlock:</TokenIdentifier>
			<Abstract type="html">Specifies the CIDR block assigned to the subnet.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *cidrBlock</Declaration>
			
			
			<Anchor>//api/name/cidrBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Subnet/cidrBlock</TokenIdentifier>
			<Abstract type="html">Specifies the CIDR block assigned to the subnet.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *cidrBlock</Declaration>
			
			
			<Anchor>//api/name/cidrBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/setAvailableIpAddressCount:</TokenIdentifier>
			<Abstract type="html">Specifies the number of unused IP addresses in the subnet. &lt;note&gt; &lt;p&gt;
The IP addresses for any stopped instances are considered unavailable.
&lt;/note&gt;</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSNumber *availableIpAddressCount</Declaration>
			
			
			<Anchor>//api/name/availableIpAddressCount</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Subnet/availableIpAddressCount</TokenIdentifier>
			<Abstract type="html">Specifies the number of unused IP addresses in the subnet. &lt;note&gt; &lt;p&gt;
The IP addresses for any stopped instances are considered unavailable.
&lt;/note&gt;</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSNumber *availableIpAddressCount</Declaration>
			
			
			<Anchor>//api/name/availableIpAddressCount</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/setAvailabilityZone:</TokenIdentifier>
			<Abstract type="html">Specifies the Availability Zone the subnet is in.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *availabilityZone</Declaration>
			
			
			<Anchor>//api/name/availabilityZone</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Subnet/availabilityZone</TokenIdentifier>
			<Abstract type="html">Specifies the Availability Zone the subnet is in.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *availabilityZone</Declaration>
			
			
			<Anchor>//api/name/availabilityZone</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/setDefaultForAz:</TokenIdentifier>
			<Abstract type="html">The value of the DefaultForAz property for this object.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL defaultForAz</Declaration>
			
			
			<Anchor>//api/name/defaultForAz</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Subnet/defaultForAz</TokenIdentifier>
			<Abstract type="html">The value of the DefaultForAz property for this object.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL defaultForAz</Declaration>
			
			
			<Anchor>//api/name/defaultForAz</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/setMapPublicIpOnLaunch:</TokenIdentifier>
			<Abstract type="html">The value of the MapPublicIpOnLaunch property for this object.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL mapPublicIpOnLaunch</Declaration>
			
			
			<Anchor>//api/name/mapPublicIpOnLaunch</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Subnet/mapPublicIpOnLaunch</TokenIdentifier>
			<Abstract type="html">The value of the MapPublicIpOnLaunch property for this object.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL mapPublicIpOnLaunch</Declaration>
			
			
			<Anchor>//api/name/mapPublicIpOnLaunch</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/setTags:</TokenIdentifier>
			<Abstract type="html">A list of tags for the Subnet.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2Subnet/tags</TokenIdentifier>
			<Abstract type="html">A list of tags for the Subnet.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/addTag:</TokenIdentifier>
			<Abstract type="html">Adds a single object to tags.
This function will alloc and init tags if not already done.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>- (void)addTag:(EC2Tag *)tagObject</Declaration>
			
			
			<Anchor>//api/name/addTag:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2Subnet/description</TokenIdentifier>
			<Abstract type="html">Returns a string representation of this object; useful for testing and
debugging.</Abstract>
			<DeclaredIn>EC2Subnet.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of this object.</Abstract></ReturnValue>
			<Anchor>//api/name/description</Anchor>
		</Token>
		
	</File>
</Tokens>