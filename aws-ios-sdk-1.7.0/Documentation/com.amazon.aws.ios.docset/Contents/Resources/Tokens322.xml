<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/EC2DescribeLicensesRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/EC2DescribeLicensesRequest</TokenIdentifier>
			<Abstract type="html">Describe Licenses Request</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>
			
			<NodeRef refid="322"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2DescribeLicensesRequest/init</TokenIdentifier>
			<Abstract type="html">Default constructor for a new  object.  Callers should use the
property methods to initialize this object after creating it.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2DescribeLicensesRequest/setDryRun:</TokenIdentifier>
			<Abstract type="html">The value of the DryRun property for this object.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2DescribeLicensesRequest/dryRun</TokenIdentifier>
			<Abstract type="html">The value of the DryRun property for this object.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2DescribeLicensesRequest/setLicenseIds:</TokenIdentifier>
			<Abstract type="html">Specifies the license registration for which details are to be
returned.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *licenseIds</Declaration>
			
			
			<Anchor>//api/name/licenseIds</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2DescribeLicensesRequest/licenseIds</TokenIdentifier>
			<Abstract type="html">Specifies the license registration for which details are to be
returned.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *licenseIds</Declaration>
			
			
			<Anchor>//api/name/licenseIds</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2DescribeLicensesRequest/setFilters:</TokenIdentifier>
			<Abstract type="html">A list of filters used to match properties for Licenses. For a
complete reference to the available filter keys for this operation,
see the &lt;a
&quot;http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/&quot;&gt;Amazon
EC2 API reference&lt;/a&gt;.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2DescribeLicensesRequest/filters</TokenIdentifier>
			<Abstract type="html">A list of filters used to match properties for Licenses. For a
complete reference to the available filter keys for this operation,
see the &lt;a
&quot;http://docs.amazonwebservices.com/AWSEC2/latest/APIReference/&quot;&gt;Amazon
EC2 API reference&lt;/a&gt;.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2DescribeLicensesRequest/addLicenseId:</TokenIdentifier>
			<Abstract type="html">Adds a single object to licenseIds.
This function will alloc and init licenseIds if not already done.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>- (void)addLicenseId:(NSString *)licenseIdObject</Declaration>
			
			
			<Anchor>//api/name/addLicenseId:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2DescribeLicensesRequest/addFilter:</TokenIdentifier>
			<Abstract type="html">Adds a single object to filters.
This function will alloc and init filters if not already done.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>- (void)addFilter:(EC2Filter *)filterObject</Declaration>
			
			
			<Anchor>//api/name/addFilter:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2DescribeLicensesRequest/description</TokenIdentifier>
			<Abstract type="html">Returns a string representation of this object; useful for testing and
debugging.</Abstract>
			<DeclaredIn>EC2DescribeLicensesRequest.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of this object.</Abstract></ReturnValue>
			<Anchor>//api/name/description</Anchor>
		</Token>
		
	</File>
</Tokens>