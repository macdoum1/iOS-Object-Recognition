<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/EC2InstanceAttribute.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/EC2InstanceAttribute</TokenIdentifier>
			<Abstract type="html">Instance Attribute</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>
			
			<NodeRef refid="397"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/init</TokenIdentifier>
			<Abstract type="html">Default constructor for a new  object.  Callers should use the
property methods to initialize this object after creating it.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setInstanceId:</TokenIdentifier>
			<Abstract type="html">The ID of the associated instance.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *instanceId</Declaration>
			
			
			<Anchor>//api/name/instanceId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/instanceId</TokenIdentifier>
			<Abstract type="html">The ID of the associated instance.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *instanceId</Declaration>
			
			
			<Anchor>//api/name/instanceId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setInstanceType:</TokenIdentifier>
			<Abstract type="html">The instance type (e.g., &lt;code&gt;m1.small&lt;/code&gt;,
&lt;code&gt;c1.medium&lt;/code&gt;, &lt;code&gt;m2.2xlarge&lt;/code&gt;, and so on).</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *instanceType</Declaration>
			
			
			<Anchor>//api/name/instanceType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/instanceType</TokenIdentifier>
			<Abstract type="html">The instance type (e.g., &lt;code&gt;m1.small&lt;/code&gt;,
&lt;code&gt;c1.medium&lt;/code&gt;, &lt;code&gt;m2.2xlarge&lt;/code&gt;, and so on).</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *instanceType</Declaration>
			
			
			<Anchor>//api/name/instanceType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setKernelId:</TokenIdentifier>
			<Abstract type="html">The kernel ID of the associated instance.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *kernelId</Declaration>
			
			
			<Anchor>//api/name/kernelId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/kernelId</TokenIdentifier>
			<Abstract type="html">The kernel ID of the associated instance.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *kernelId</Declaration>
			
			
			<Anchor>//api/name/kernelId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setRamdiskId:</TokenIdentifier>
			<Abstract type="html">The ramdisk ID of the associated instance.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *ramdiskId</Declaration>
			
			
			<Anchor>//api/name/ramdiskId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/ramdiskId</TokenIdentifier>
			<Abstract type="html">The ramdisk ID of the associated instance.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *ramdiskId</Declaration>
			
			
			<Anchor>//api/name/ramdiskId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setUserData:</TokenIdentifier>
			<Abstract type="html">MIME, Base64-encoded user data.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *userData</Declaration>
			
			
			<Anchor>//api/name/userData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/userData</TokenIdentifier>
			<Abstract type="html">MIME, Base64-encoded user data.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *userData</Declaration>
			
			
			<Anchor>//api/name/userData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setDisableApiTermination:</TokenIdentifier>
			<Abstract type="html">Whether this instance can be terminated. You must modify this
attribute before you can terminate any &quot;locked&quot; instances.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL disableApiTermination</Declaration>
			
			
			<Anchor>//api/name/disableApiTermination</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/disableApiTermination</TokenIdentifier>
			<Abstract type="html">Whether this instance can be terminated. You must modify this
attribute before you can terminate any &quot;locked&quot; instances.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL disableApiTermination</Declaration>
			
			
			<Anchor>//api/name/disableApiTermination</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setInstanceInitiatedShutdownBehavior:</TokenIdentifier>
			<Abstract type="html">Whether this instance&apos;s Amazon EBS volumes are deleted when the
instance is shut down.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *instanceInitiatedShutdownBehavior</Declaration>
			
			
			<Anchor>//api/name/instanceInitiatedShutdownBehavior</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/instanceInitiatedShutdownBehavior</TokenIdentifier>
			<Abstract type="html">Whether this instance&apos;s Amazon EBS volumes are deleted when the
instance is shut down.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *instanceInitiatedShutdownBehavior</Declaration>
			
			
			<Anchor>//api/name/instanceInitiatedShutdownBehavior</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setRootDeviceName:</TokenIdentifier>
			<Abstract type="html">The root device name (e.g., &lt;code&gt;/dev/sda1&lt;/code&gt;).</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *rootDeviceName</Declaration>
			
			
			<Anchor>//api/name/rootDeviceName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/rootDeviceName</TokenIdentifier>
			<Abstract type="html">The root device name (e.g., &lt;code&gt;/dev/sda1&lt;/code&gt;).</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *rootDeviceName</Declaration>
			
			
			<Anchor>//api/name/rootDeviceName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setBlockDeviceMappings:</TokenIdentifier>
			<Abstract type="html">How block devices are exposed to this instance. Each mapping is made
up of a virtualName and a deviceName.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *blockDeviceMappings</Declaration>
			
			
			<Anchor>//api/name/blockDeviceMappings</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/blockDeviceMappings</TokenIdentifier>
			<Abstract type="html">How block devices are exposed to this instance. Each mapping is made
up of a virtualName and a deviceName.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *blockDeviceMappings</Declaration>
			
			
			<Anchor>//api/name/blockDeviceMappings</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setProductCodes:</TokenIdentifier>
			<Abstract type="html">The value of the ProductCodes property for this object.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *productCodes</Declaration>
			
			
			<Anchor>//api/name/productCodes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/productCodes</TokenIdentifier>
			<Abstract type="html">The value of the ProductCodes property for this object.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSMutableArray *productCodes</Declaration>
			
			
			<Anchor>//api/name/productCodes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/setEbsOptimized:</TokenIdentifier>
			<Abstract type="html">Boolean value</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL ebsOptimized</Declaration>
			
			
			<Anchor>//api/name/ebsOptimized</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/EC2InstanceAttribute/ebsOptimized</TokenIdentifier>
			<Abstract type="html">Boolean value</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL ebsOptimized</Declaration>
			
			
			<Anchor>//api/name/ebsOptimized</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/addBlockDeviceMapping:</TokenIdentifier>
			<Abstract type="html">Adds a single object to blockDeviceMappings.
This function will alloc and init blockDeviceMappings if not already done.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>- (void)addBlockDeviceMapping:(EC2InstanceBlockDeviceMapping *)blockDeviceMappingObject</Declaration>
			
			
			<Anchor>//api/name/addBlockDeviceMapping:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/addProductCode:</TokenIdentifier>
			<Abstract type="html">Adds a single object to productCodes.
This function will alloc and init productCodes if not already done.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>- (void)addProductCode:(EC2ProductCode *)productCodeObject</Declaration>
			
			
			<Anchor>//api/name/addProductCode:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/EC2InstanceAttribute/description</TokenIdentifier>
			<Abstract type="html">Returns a string representation of this object; useful for testing and
debugging.</Abstract>
			<DeclaredIn>EC2InstanceAttribute.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			<ReturnValue><Abstract type="html">A string representation of this object.</Abstract></ReturnValue>
			<Anchor>//api/name/description</Anchor>
		</Token>
		
	</File>
</Tokens>