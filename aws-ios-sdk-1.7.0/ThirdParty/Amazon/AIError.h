/**
 * Copyright 2010-2013 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with the License. A copy
 * of the License is located at
 *
 * http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

/*!
 @header AIError.h
 @discussion This header defines the AIError interface that encapsulates user friendly error codes for the AIAuthenticationDelegate protocol.
 */
#import <Foundation/Foundation.h>

/*!
 @interface AIError
 @discussion This class encapsulates the error information generated by the SDK. An AIError object includes the error code and a meaningful error message.
 
 @version 1.0
 */
@interface AIError : NSObject

/*!
 @const kAINoError
 @abstract No error code.
 @discussion Initial value to which the error object is initialized.
 
 @since 1.0
 */
extern const NSUInteger kAINoError;

/*!
 @const kAIApplicationNotAuthorized
 @abstract A valid refresh token was not found.
 @discussion The refresh token held by the SDK is invalid, expired, revoked, does not match the redirection URI used in the authorization request, does not have the required scopes, or was issued to another client.
 
 In general with this type of error, the application can call @link //apple_ref/doc/anysymbol/authorizeUserForScopes:delegate: @/link to request authorization, or call @link //apple_ref/doc/anysymbol/clearAuthorizationState: @/link to logout the user.
 
 The following APIs return this error:
 1. @link //apple_ref/doc/anysymbol/getProfile: @/link
 2. @link //apple_ref/doc/anysymbol/getAccessTokenForScopes:withOverrideParams:delegate: @/link
 
 @since 1.0
 */
extern const NSUInteger kAIApplicationNotAuthorized;

/*!
 @const kAIServerError
 @abstract An error occured on the server.
 @discussion The server encountered an error while completing the request, or the SDK received an unknown response from the server.
 
 In general on getting this type of error, the application can allow user to retry the last action.
 The following APIs return this error:
 1. @link //apple_ref/doc/anysymbol/getProfile: @/link
 2. @link //apple_ref/doc/anysymbol/getAccessTokenForScopes:withOverrideParams:delegate: @/link
 3. @link //apple_ref/doc/anysymbol/authorizeUserForScopes:delegate: @/link
 
 @since 1.0
 */
extern const NSUInteger kAIServerError;

/*!
 @const kAIErrorUserInterrupted
 @abstract The user canceled the login page.
 @discussion The user pressed cancel while on the login or the consent page.
 
 In general on getting this type of error, the application can allow user to login again.
 The following APIs return this error:
 1. @link //apple_ref/doc/anysymbol/authorizeUserForScopes:delegate: @/link
 
 @since 1.0
 */
extern const NSUInteger kAIErrorUserInterrupted;

/*!
 @const kAIAccessDenied
 @abstract The resource owner or authorization server denied the
 request.
 @discussion The user declined to authorize the application on the consent page.
 
 In general on getting this type of error, the application can call @link //apple_ref/doc/anysymbol/authorizeUserForScopes:delegate: @/link to request authorization.
 The following APIs return this error:
 1. @link //apple_ref/doc/anysymbol/authorizeUserForScopes:delegate: @/link
 
 @since 1.0
 */
extern const NSUInteger kAIAccessDenied;

/*!
 @const kAIDeviceError
 @abstract The SDK encountered an error on the device.
 @discussion Currently, the SDK only throws this error when it receives the some error from the keychain service.
 
 In general on getting this type of error, the application can call @link //apple_ref/doc/anysymbol/clearAuthorizationState: @/link to reset the KeyChain.
 
 The following APIs return this error:
 1. @link //apple_ref/doc/anysymbol/getProfile: @/link
 2. @link //apple_ref/doc/anysymbol/getAccessTokenForScopes:withOverrideParams:delegate: @/link
 3. @link //apple_ref/doc/anysymbol/authorizeUserForScopes:delegate: @/link
 
 @since 1.0
 */
extern const NSUInteger kAIDeviceError;

/*!
 @const kAIInvalidInput
 @abstract One of the API parameters is invalid.
 @discussion The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed.
 
 Check your method parameters and try again. This error is expected from all APIs.
 
 @since 1.0
 */
extern const NSUInteger kAIInvalidInput;

/*!
 @const kAINetworkError
 @abstract A network error occurred, possibly due to the user being offline.
 @discussion In general on getting this error the application can ask the user to check their network connections.
 
 The following APIs return this error:
 1. @link //apple_ref/doc/anysymbol/getProfile: @/link
 2. @link //apple_ref/doc/anysymbol/getAccessTokenForScopes:withOverrideParams:delegate: @/link
 3. @link //apple_ref/doc/anysymbol/authorizeUserForScopes:delegate: @/link
 
 @since 1.0
 */
extern const NSUInteger kAINetworkError;

/*!
 @const kAIUnauthorizedClient
 @abstract The client is not authorized to request an authorization
 code using this method.
 @discussion The application is not authorized to make this call. Make sure the registered Bundle identifier matches your application, and that you have a valid APIKey property in the application property list.
 
 The following APIs return this error:
 1. @link //apple_ref/doc/anysymbol/getAccessTokenForScopes:withOverrideParams:delegate: @/link
 2. @link //apple_ref/doc/anysymbol/authorizeUserForScopes:delegate: @/link
 
 @since 1.0
 */
extern const NSUInteger kAIUnauthorizedClient;

/*!
 @const kAIInternalError
 @abstract An internal error occured in the SDK.
 @discussion
 In general, these errors cannot be handled by application. Please contact us to report recurring internal errors.
 
 The following APIs return this error:
 1. @link //apple_ref/doc/anysymbol/getProfile: @/link
 2. @link //apple_ref/doc/anysymbol/getAccessTokenForScopes:withOverrideParams:delegate: @/link
 3. @link //apple_ref/doc/anysymbol/authorizeUserForScopes:delegate: @/link
 */
extern const NSUInteger kAIInternalError;

/*!
 @property code
 @abstract The error code for the error encountered by the API.
 
 @since 1.0
 */
@property NSUInteger code;

/*!
 @property message
 @abstract The readable message corresponding to the error code.
 @discussion The message provides more information about the exact type of error encountered by the API.
 
 @since 1.0
 */
@property (retain) NSString* message;

@end